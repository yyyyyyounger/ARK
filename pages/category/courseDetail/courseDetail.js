var app = getApp();
const db = wx.cloud.database();   // Êï∏ÊìöÂ∫´
const _ = db.command

import Notify from '../../../miniprogram_npm/@vant/weapp/notify/notify';
import Dialog from '../../../miniprogram_npm/@vant/weapp/dialog/dialog';
import Toast from '../../../miniprogram_npm/@vant/weapp/toast/toast';

Page({
  data: {
    // followÁãÄÊÖã
    haveFollow : false,
    // È™®Êû∂Â±è
    loading:true,
    // Ê≠•È©üÊ¢ù - begin
    numList: [{
      name: 'Â°´ÂØ´‰ø°ÊÅØ'
      }, {
        name: 'Êèê‰∫§ÁÆ°ÁêÜÂì°ÂØ©Ê†∏'
      }, {
        name: 'Ë™≤Á®ãÁôº‰Ωà'
      }, 
    ],
    stepsActive:1,    // ÊéßÂà∂Ê≠•È©üÊ¢ùactive
    // Ê≠•È©üÊ¢ù - end
  },
  onLoad: function(options){
    this.app = getApp();
    // Áç≤Âèñ‰∏äÂÄãÈ†ÅÈù¢ÂÇ≥ÈÅûÁöÑÂèÉÊï∏ÔºåË™™ÊòéÁî®Êà∂ÁµÑÂíåÈúÄË¶ÅÊ∏≤ÊüìÁöÑcourseId
    let detailInfo = JSON.parse(options.detailInfo);
    this.setData({  detailInfo  })
    console.log("‰∏äÂÄãÈ†ÅÈù¢ÂÇ≥ÈÅûÂÄºÁÇ∫Ôºö",this.data.detailInfo)

    const userCloudDataStorage = wx.getStorageSync('userCloudData');  // Áî®Êà∂Á∑©Â≠ò
    // ÂæûÁ∑©Â≠ò‰∏≠Áç≤ÂèñË©≤Áî®Êà∂ÊòØÂê¶ÁÆ°ÁêÜÂì°
    this.setData({
      admin         : userCloudDataStorage.data.admin,
      userCloudData : userCloudDataStorage.data,
    })

    // Ë´ãÊ±ÇÈõ≤Á´ØÁöÑcourseInfoÊï∏ÊìöÔºåË©≤courseIdÁÇ∫numÈ°ûÂûã
    this.returnCourseData();
  },
  onReady() {
    console.log("Ë™≤Á®ãË©≥ÊÉÖÈ†Å - Â∑≤ÁªèReady");
  },
  onShow() {
    this.onPullDownRefresh();
  },
  // Ë´ãÊ±ÇÊï∏ÊìöÂ∫´ËøîÂõûË©≤courseIdÁöÑÊï∏Êìö
  returnCourseData (){
    const userCloudDataStorage = wx.getStorageSync('userCloudData');  // Áî®Êà∂Á∑©Â≠ò

    // Ë´ãÊ±ÇÈõ≤Á´ØÁöÑcourseInfoÊï∏ÊìöÔºåË©≤courseIdÁÇ∫numÈ°ûÂûã
    db.collection('course') .doc(this.data.detailInfo.courseId) .get()
    .then(res=>{
      console.log("Ë©≤courseIdÂú®Êï∏ÊìöÂ∫´ÂÑ≤Â≠òÁöÑÊï∏ÊìöÁÇ∫Ôºö",res.data);
      this.setData({  courseCloudData : res.data  })
      this.setData({  courseInfoInput : this.data.courseCloudData.courseInfoInput  })
      this.ArrayDataInit(this);   // Êï∏ÊìöÊìç‰ΩúÊï∏ÁµÑ„ÄÅÂ∞çË±°Á≠âÁöÑÂàùÂßãÂåñ

      let followMember = this.data.courseCloudData.followMember;
      // Âà§Êñ∑ÊòØÂê¶follow‰∫ÜË©≤Ë™≤Á®ãÔºåfollowÁãÄÊÖãÊõ¥ÊîπwxmlÁöÑÊåâÈàïÂΩ¢ÊÖã
      followMember.forEach(item=>{
        if(item.arkid==userCloudDataStorage.data.arkid){
            console.log("ÈÄôÂÄãÁî®Êà∂Â∑≤follow‰∫ÜÈÄôÂÄãË™≤Á®ãÔºÅ");
            this.setData({  haveFollow : true  })
        }
    })

      this.setData({  loading: false,  }) // È™®Êû∂Â±èÊ∂àÂ§±
    }) .catch(err=>{  console.error(err);  })
  },
  // ÂåπÈÖçshortNameÂ∞çË±°ÔºåÂñÆÂÄãÊ∏≤Êüì/Ë®≠ÂÆöÊôÇÈÅ©Áî®Â∞çË±°ÔºåforÂæ™Áí∞ÊôÇÈÅ©Áî®Êï∏ÁµÑ
  findSetData(shortNameArray) {
    // ÂåπÈÖçÂá∫shortNameÁöÑindexÔºåÁîüÊàêÁÇ∫‰∏ÄÂÄãÂ∞çË±°ÂΩ¢Âºè
    let shortNameIndex={};
    this.data.courseInfoInput.map(function (e, item) {    // Á©∂Ê•µÂÑ™ÂåñÔºÅÊú¨Ë≥™‰∏ä‰∏ÄË°å‰ª£Á¢ºÂåπÈÖçÂá∫ÊâÄÊúâindex
      shortNameIndex[e.shortName] = e.id;
    });
    this.setData({  shortNameIndex  })
    // console.log("shortNameIndexÁÇ∫",shortNameIndex);

    // ÂåπÈÖçÂá∫shortNameÁöÑdisplayÊ¨äÈôêÔºåÁîüÊàêÁÇ∫‰∏ÄÂÄãÂ∞çË±°ÂΩ¢Âºè
    let shortNameDisplay={};
    this.data.courseInfoInput.map(function (e, item) {
      shortNameDisplay[e.shortName] = e.display;
    });
    this.setData({  shortNameDisplay  })
    // console.log("shortNameDisplayÁÇ∫",shortNameDisplay);
  },
  // ÂàùÂßãÂåñÂêÑÁ®ÆÊï∏ÁµÑ
  ArrayDataInit(that) {
    // ÁîüÊàê ÁÑ°inputÁâà courseInfoÁöÑshortNameÊï∏ÁµÑ
    let shortNameArray = that.data.courseInfoInput.map((item)=>{    return item.shortName   });
    // ÁîüÊàêuserInfoInputË£°ÂÖÅË®±È°ØÁ§∫ÁöÑË®≠ÁΩÆÊï∏ÁµÑ
    let InfoDisplay = that.data.courseInfoInput.map((item)=>{    return item.display   });
    // ÁîüÊàêuserInfoInputË£°ÂÖÅË®±Á∑®ËºØÁöÑË®≠ÁΩÆÊï∏ÁµÑ
    let canEdit     = that.data.courseInfoInput.map((item)=>{    return item.canEdit    });
    // ÂÖÅË®±Á∑®ËºØ/È°ØÁ§∫ ‚Üí setData
    that.setData({    InfoDisplay, canEdit, shortNameArray    });
    // ÂàùÂßãÂåñÊâÄÊúâindexÂÄº
    that.findSetData(shortNameArray);
  },

  onPullDownRefresh: function(){
    this.returnCourseData();
    setTimeout(() => {
      wx.stopPullDownRefresh();
    }, 1000);
  },
  onShareAppMessage: function(){

  },

  addFollow (e) {
    const userCloudDataStorage = wx.getStorageSync('userCloudData');
    if (userCloudDataStorage) {    // Â∑≤ÁôªÈåÑÊâçÂèØ‰ª•Êìç‰Ωú
      Dialog.confirm({
        title: 'Êìç‰ΩúÊèêÁ§∫',
        message: 'Ëá™Â∑±followÁöÑË™≤Ë¶ÅÂ•ΩÂ•Ω‰∏äÂÆåÂñîÔºÅüòé',
        zIndex:99999999,
      })
      .then(res=>{            // on confirm
        // Âä†ËºâÊèêÁ§∫
        Toast.loading({
          message: 'ÊãºÂëΩÂä†Ëºâ‰∏≠...',
          forbidClick: true,
        });
        // Ê≠£Â∏∏ÊáâË©≤Âè™ËÉΩfollow 20ÁØÄË™≤ÔºåÁç≤ÂèñË≥áÊñôÁöÑÊôÇÂÄôÈªòË™ç20Ê¢ùË®òÈåÑÈôêÂà∂ - Â•ΩÂÉèÊ≤íÊúâÂØ´
        
        let selectCourse = this.data.courseCloudData._id;  // Ë®òÈåÑFollowÁöÑË™≤Á®ãid
        console.log("Ë´ãÊ±Çadd",selectCourse);
    
        // Èõ≤ÂáΩÊï∏Êõ¥Êñ∞ - userÈõÜÂêà - recentFollowIdArrayÊï∏ÁµÑ
        const userCloudDataStorage = wx.getStorageSync('userCloudData');  // Áî®Êà∂Êï∏ÊìöÁ∑©Â≠ò
        // Ê¨äÈôêÂïèÈ°åÈúÄË¶ÅË™øÁî®Èõ≤ÂáΩÊï∏
        // userÂü∫Êú¨‰ø°ÊÅØÂ∞éÂÖ•Âà∞Ë©≤courseIdÁöÑfollowMemberÊï∏ÁµÑÂÖß
        wx.cloud.callFunction({
          name : 'courseFollowMember',
          data : {
            mode          : "add",
            selectCourse  : selectCourse,
            endTimeStamp  : this.data.courseCloudData.timeStampPick,
            arkid         : userCloudDataStorage.data.arkid,
            avatarUrl     : userCloudDataStorage.data.avatarUrl,
            name          : userCloudDataStorage.data.userInfoInput[1].input,
          }
        }) .then(res=>{         // ÂØ´ÂÖ•Ëá™Â∑±ÁöÑfollowÂàóË°®
          db.collection('user').doc(userCloudDataStorage.data._openid).update({
            data: {
              recentFollowIdArray: _.push([selectCourse]),
            }
          }) .then(res=>{       // ÊàêÂäüÊèêÁ§∫ & ÂêåÊ≠•wxmlÁöÑÈ°ØÁ§∫
            Toast('FollowÊàêÂäüÔºÅË™≤Á®ãÁ∑®ËôüÔºö'+selectCourse+'\nÂèØÂâçÂæÄ ‚ÄúÊàëÁöÑFollow‚Äù Êü•Áúã');
            this.setData({  haveFollow : true  })
          })
        }) .catch(err=>{        // Â§±ÊïóÊèêÁ§∫
          console.error(err);
          Notify({ type: 'warning', message: 'Êìç‰ΩúÂ§±ÊïóÔºÅË´ãÂà∑Êñ∞È†ÅÈù¢ÊàñËÅØÁπ´ÁÆ°ÁêÜÂì°ÔºÅ' });
        })
        
        // Ë©¢ÂïèÊòØÂê¶ÂêåÊÑèÂæÆ‰ø°Ë®ÇÈñ± ÈñãË™≤Ê∂àÊÅØ
      })                      // on confirm - end
      .catch(res=>{           // on cancel
      })
    }
    else {                  // Êú™ÁôªÈåÑÊèêÁ§∫ÁôªÈåÑ
      Dialog.confirm({
        title: 'Êìç‰ΩúÊèêÁ§∫',
        message: 'Ë©≤ÂäüËÉΩÈúÄË¶ÅÁôªÈåÑÂæåÊìç‰ΩúÔºÅ\nÁèæÂú®ÂéªÁôªÈåÑÂóéÔºü',
        zIndex:99999999,
      })
      .then(() => {   // on confirm
        wx.switchTab({
          url: '../user/user',
        })
      })
      .catch(() => {  // on cancel
        
      });
    }
  },
  deleteFollow(e){
    // Èò≤Ë™§Ëß∏ÂºèÊèêÂïè
    Dialog.confirm({
      title: 'ÈáçË¶ÅÊèêÁ§∫',
      message: 'Â∞±ÈÄôÈ∫ºÂøçÂøÉË™™ByeByeÂóéÔºüüò≠',
      zIndex:99999999,
    })
    .then(() => {     // on confirm
      Toast.loading({   // Âä†ËºâÊèêÁ§∫
        message: 'ÊãºÂëΩÂä†Ëºâ‰∏≠...',
        forbidClick: true,
      });

      // Ë®òÈåÑFollowÁöÑË™≤Á®ãid
      let selectCourse = this.data.courseCloudData._id;
      console.log("Ë´ãÊ±Çdelete",selectCourse);

      // Ë™øÁî®Èõ≤ÂáΩÊï∏Êõ¥Êñ∞ - userÈõÜÂêà - recentFollowIdArrayÊï∏ÁµÑ
      const userCloudDataStorage = wx.getStorageSync('userCloudData');  // Áî®Êà∂Êï∏ÊìöÁ∑©Â≠ò
      wx.cloud.callFunction({   // Âà™Èô§followMemberÊï∏ÁµÑÂÖßË©≤userÁöÑarkidÁ≠âÊï∏Êìö
        name : 'courseFollowMember',
        data : {
          mode          : "delete",
          endTimeStamp  : this.data.courseCloudData.timeStampPick,
          selectCourse  : selectCourse,
          arkid         : userCloudDataStorage.data.arkid,
        }
      }) .then(res=>{           // Âà™Èô§Ëá™Â∑±ÁöÑfollowÂàóË°®
        db.collection('user').doc(userCloudDataStorage.data._openid).update({
          data: {
            recentFollowIdArray: _.pull(_.in([selectCourse]))
          }
        }) .then(res=>{         // ÊàêÂäüÊèêÁ§∫ & ÂêåÊ≠•wxmlÁöÑÈ°ØÁ§∫
          Toast('Âà™Èô§ÊàêÂäüÔºÅ');
          this.setData({  haveFollow : false  })
        }) .catch(err=>{ console.error(err); })
      }) .catch(err=>{             // Â§±ÊïóÊèêÁ§∫
        console.error(err);
        Notify({ type: 'warning', message: 'Êìç‰ΩúÂ§±ÊïóÔºÅË´ãÂà∑Êñ∞È†ÅÈù¢ÊàñËÅØÁπ´ÁÆ°ÁêÜÂì°ÔºÅ' });
      })
    })  // on confirm - end
    .catch(() => {    // on cancel
    });
  },

  // ‰∏ãËºâÊñá‰ª∂
  downLoadFile(e) {
    let selectIndex = e.currentTarget.dataset.index;
    let size = this.data.courseCloudData.filePaths[selectIndex].size;
    let mes;
    if (size>1000) {
      size = size/1000000;
      mes = size.toFixed(2)+" MB";
      console.log(mes);
    } else {
      size = size/100;
      mes = size.toFixed(2)+" KB";
      console.log(mes);
    }
    Dialog.confirm({
      title: 'Êìç‰ΩúÊèêÁ§∫',
      message: 'Á¢∫ÂÆöÁç≤ÂèñÊñá‰ª∂Ôºö\n "'+this.data.courseCloudData.filePaths[selectIndex].name+'"\n('+mes+')'+' ÁöÑ‰∏ãËºâÈèàÊé•ÂóéÔºü',
    }) .then(res=>{
      let path = this.data.courseCloudData.filePaths[selectIndex].path;
      db.collection('fileList') .where({
        'fileInfo.path' : path,
      }) .field({  cloudFileId : true  }) .get() .then(res=>{
        // Áç≤ÂèñÂèØ‰∏ãËºâÁöÑÁúüÂØ¶ÈèàÊé•
        wx.cloud.getTempFileURL({
          fileList : [res.data[0].cloudFileId]      // ÂÇ≥ÂèÉÁÇ∫Êï∏ÁµÑÂΩ¢Âºè
        }) .then(res => {
          Toast.success('Áç≤ÂèñÊàêÂäüÔºÅ');
          // ÂØ´ÂÖ•Áî®Êà∂Á≤òË≤ºÊùø
          wx.setClipboardData({
            data: res.fileList[0].tempFileURL,    // ÂèØ‰∏ãËºâÁöÑÁúüÂØ¶ÈèàÊé•
            success (res) {
              Toast('Â∑≤Ë§áË£ΩÈèàÊé•Âà∞Á≤òË≤ºÊùøÔºå\nÂèØÂâçÂæÄÁÄèË¶ΩÂô®ÊâìÈñãÔºÅ');
            }
          })
        }).catch(error => {  console.error(error);  })
      })
    })
  },

  // Ê≠•È©üÊ¢ù
  basicsSteps() {
    this.setData({
      basics: this.data.basics == this.data.basicsList.length - 1 ? 0 : this.data.basics + 1
    })
  },
  // ‰∏ã‰∏ÄÊ≠• - ÊåâÈàïËß∏Áôº
  numSteps() {
    this.setData({
      num: this.data.num == this.data.numList.length - 1 ? 1 : this.data.num + 1
    })
  },

  // Ë∑≥ËΩâÁ∑®ËºØÈ†Å
  editInfo() {
    let detailInfo = {
      user             :   "speaker",
      courseCloudData  :   this.data.courseCloudData,
    }
    detailInfo = JSON.stringify(detailInfo);
    wx.navigateTo({
      url: '../holdACourses/holdACourses?detailInfo=' + detailInfo,
    })
  },

});